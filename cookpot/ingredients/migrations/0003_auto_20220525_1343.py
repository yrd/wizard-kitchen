# Generated by Django 3.2.9 on 2022-05-25 13:43

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ingredients', '0002_alter_ingredientmolecule_molecule'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='ingredientmolecule',
            options={'verbose_name': 'ingredient molecule containment', 'verbose_name_plural': 'ingredient molecule containments'},
        ),
        migrations.AlterModelOptions(
            name='molecule',
            options={'verbose_name': 'molecule', 'verbose_name_plural': 'molecules'},
        ),
        migrations.AddField(
            model_name='ingredient',
            name='foodb_id',
            field=models.CharField(blank=True, default='', help_text='Public identifier of the food item in the FooDB database.', max_length=9, validators=[django.core.validators.RegexValidator('FOOD\\d{5}', code='invalid-foodb-id', message='FooDB identifiers must look like this: FOOD00648')], verbose_name='FooDB ID'),
        ),
        migrations.AlterField(
            model_name='ingredient',
            name='flavordb_id',
            field=models.PositiveIntegerField(help_text='ID of the corresponding entity in the FlavorDB database.', null=True, verbose_name='FlavorDB ID'),
        ),
        migrations.AlterField(
            model_name='molecule',
            name='foodb_id',
            field=models.CharField(blank=True, default='', help_text='Public identifier in the FooDB database.', max_length=9, validators=[django.core.validators.RegexValidator('FDB\\d{6}', code='invalid-foodb-id', message='FooDB identifiers must look like this: FDB123456')], verbose_name='FooDB ID'),
        ),
        migrations.AlterField(
            model_name='molecule',
            name='pubchem_id',
            field=models.PositiveIntegerField(help_text='ID of the molecule in the PubChem database.', unique=True, verbose_name='PubChem ID'),
        ),
        migrations.AddConstraint(
            model_name='ingredient',
            constraint=models.UniqueConstraint(condition=models.Q(('flavordb_id__isnull', False)), fields=('flavordb_id',), name='flavordb_entity_ids_unique'),
        ),
        migrations.AddConstraint(
            model_name='ingredient',
            constraint=models.UniqueConstraint(condition=models.Q(('foodb_id', ''), _negated=True), fields=('foodb_id',), name='foodb_food_ids_unique'),
        ),
        migrations.AddConstraint(
            model_name='ingredientmolecule',
            constraint=models.UniqueConstraint(fields=('ingredient', 'molecule'), name='ingredient_molecule_unique'),
        ),
        migrations.AddConstraint(
            model_name='molecule',
            constraint=models.UniqueConstraint(condition=models.Q(('foodb_id', ''), _negated=True), fields=('foodb_id',), name='foodb_molecule_ids_unique'),
        ),
    ]
